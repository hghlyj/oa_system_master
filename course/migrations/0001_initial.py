# Generated by Django 3.2 on 2021-12-14 07:16

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdjustClassMap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initial', models.CharField(max_length=50)),
                ('final', models.CharField(max_length=50)),
                ('is_take_effect', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'adjust_class_map',
            },
        ),
        migrations.CreateModel(
            name='AdjustClassTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_date', models.DateField()),
                ('change_date', models.DateField()),
                ('createtime', models.DateTimeField(auto_now_add=True)),
                ('change_type', models.BooleanField()),
                ('state', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'adjust_class_time',
            },
        ),
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=50, verbose_name='教室地址')),
                ('number', models.CharField(max_length=30, verbose_name='教室号')),
            ],
            options={
                'db_table': 'classroomclass',
            },
        ),
        migrations.CreateModel(
            name='CollegeStage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'college_stage',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='CoursePlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_time', models.CharField(max_length=1000)),
            ],
            options={
                'db_table': 'course_plan',
            },
        ),
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='课程名称')),
                ('stage', models.CharField(max_length=60)),
                ('sort', models.IntegerField()),
                ('version', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'courses',
                'ordering': ['sort'],
            },
        ),
        migrations.CreateModel(
            name='TeachingTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('starttime', models.DateTimeField()),
                ('endtime', models.DateTimeField()),
                ('am_class', models.TextField(max_length=1000, null=True, verbose_name='上午上课日期')),
                ('pm_class', models.TextField(max_length=1000, null=True, verbose_name='下午午上课日期')),
                ('no_class', models.TextField(max_length=1000, null=True, verbose_name='没课日期')),
                ('is_start', models.BooleanField(default=False, verbose_name='是否开始')),
            ],
            options={
                'db_table': 'teaching_time',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='RollCall',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lecturer_id', models.IntegerField(null=True, verbose_name='讲师的id')),
                ('class_id', models.IntegerField(null=True, verbose_name='班级id')),
                ('department', models.CharField(max_length=80, verbose_name='部门信息')),
                ('lecturer', models.CharField(max_length=30, verbose_name='讲师')),
                ('counsellor', models.CharField(max_length=30, verbose_name='导员')),
                ('class_name', models.CharField(max_length=30, verbose_name='班级名称')),
                ('room_number', models.CharField(max_length=30, verbose_name='教室号')),
                ('class_date', models.DateField(verbose_name='课程日期')),
                ('class_section', models.CharField(max_length=10, verbose_name='课节')),
                ('actual_date', models.DateField(verbose_name='实际的课程日期')),
                ('actual_section', models.CharField(max_length=10, verbose_name='实际的课节')),
                ('course', models.CharField(max_length=80, verbose_name='课程信息')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='最后一次点名时间')),
                ('normal', models.TextField(verbose_name='正常出勤的学生的身份证号')),
                ('cut_classes', models.TextField(blank=True, null=True, verbose_name='旷课的学生的身份证号')),
                ('leave', models.TextField(blank=True, null=True, verbose_name='请假')),
                ('late', models.TextField(blank=True, null=True, verbose_name='迟到')),
                ('state', models.BooleanField(default=False, verbose_name='是否点名')),
                ('students_num', models.IntegerField(default=0, null=True, verbose_name='总人数')),
                ('attendance_num', models.IntegerField(default=0, null=True, verbose_name='实际出勤人数')),
                ('act', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='course.adjustclasstime')),
            ],
            options={
                'db_table': 'roll_call',
            },
        ),
    ]
